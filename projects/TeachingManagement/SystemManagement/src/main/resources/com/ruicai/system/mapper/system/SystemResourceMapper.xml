<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ruicai.system.mapper.system.SystemResourceMapper">
    <resultMap id="BaseResultMap" type="com.ruicai.system.po.system.SystemResource">
        <id column="ID" property="id" jdbcType="VARCHAR"/>
        <result column="PARENT_ID" property="parentId" jdbcType="VARCHAR"/>
        <result column="RESOURCE_TYPE" property="resourceType" jdbcType="VARCHAR"/>
        <result column="RESOURCE_NAME" property="resourceName" jdbcType="VARCHAR"/>
        <result column="RESOURCE_VALUE" property="resourceValue" jdbcType="VARCHAR"/>
        <result column="RESOURCE_VISIBLE" property="resourceVisible" jdbcType="VARCHAR"/>
        <result column="RESOURCE_ENABLE" property="resourceEnable" jdbcType="VARCHAR"/>
        <result column="RESOURCE_TYPE_VIEW" property="resourceTypeView" jdbcType="DECIMAL"/>
        <result column="RESOURCE_DESCRIBE" property="resourceDescribe" jdbcType="DECIMAL"/>

    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        ID, PARENT_ID, RESOURCE_TYPE, RESOURCE_NAME, RESOURCE_VALUE, RESOURCE_VISIBLE, RESOURCE_ENABLE
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.ruicai.system.po.system.SystemResourceExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from RUICAI.SYSTEM_RESOURCE
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from RUICAI.SYSTEM_RESOURCE
        where ID = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        DELETE FROM RUICAI.SYSTEM_RESOURCE
        WHERE ID = #{id,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="com.ruicai.system.po.system.SystemResourceExample">
        delete from RUICAI.SYSTEM_RESOURCE
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.ruicai.system.po.system.SystemResource">
        <selectKey resultType="java.lang.String" keyProperty="id" order="BEFORE">
            SELECT sys_guid() FROM dual
        </selectKey>
        insert into RUICAI.SYSTEM_RESOURCE (ID, PARENT_ID, RESOURCE_TYPE,
        RESOURCE_NAME, RESOURCE_VALUE, RESOURCE_VISIBLE,
        RESOURCE_ENABLE,RESOURCE_DESCRIBE)
        values (#{id,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}, #{resourceType,jdbcType=VARCHAR},
        #{resourceName,jdbcType=VARCHAR}, #{resourceValue,jdbcType=VARCHAR}, #{resourceVisible,jdbcType=DECIMAL},
        #{resourceEnable,jdbcType=DECIMAL},#{resourceDescribe,jdbcType=DECIMAL})
    </insert>
    <insert id="insertSelective" parameterType="com.ruicai.system.po.system.SystemResource">
        <selectKey resultType="java.lang.String" keyProperty="id" order="BEFORE">
            SELECT sys_guid() FROM dual
        </selectKey>
        insert into RUICAI.SYSTEM_RESOURCE
        <trim prefix="(" suffix=")" suffixOverrides=",">
            ID,
            <if test="parentId != null">
                PARENT_ID,
            </if>
            <if test="resourceType != null">
                RESOURCE_TYPE,
            </if>
            <if test="resourceName != null">
                RESOURCE_NAME,
            </if>
            <if test="resourceValue != null">
                RESOURCE_VALUE,
            </if>
            <if test="resourceVisible != null">
                RESOURCE_VISIBLE,
            </if>
            <if test="resourceEnable != null">
                RESOURCE_ENABLE,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{id,jdbcType=VARCHAR},
            <if test="parentId != null">
                #{parentId,jdbcType=VARCHAR},
            </if>
            <if test="resourceType != null">
                #{resourceType,jdbcType=VARCHAR},
            </if>
            <if test="resourceName != null">
                #{resourceName,jdbcType=VARCHAR},
            </if>
            <if test="resourceValue != null">
                #{resourceValue,jdbcType=VARCHAR},
            </if>
            <if test="resourceVisible != null">
                #{resourceVisible,jdbcType=DECIMAL},
            </if>
            <if test="resourceEnable != null">
                #{resourceEnable,jdbcType=DECIMAL},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.ruicai.system.po.system.SystemResourceExample"
            resultType="java.lang.Integer">
        select count(*) from RUICAI.SYSTEM_RESOURCE
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update RUICAI.SYSTEM_RESOURCE
        <set>
            <if test="record.id != null">
                ID = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.parentId != null">
                PARENT_ID = #{record.parentId,jdbcType=VARCHAR},
            </if>
            <if test="record.resourceType != null">
                RESOURCE_TYPE = #{record.resourceType,jdbcType=VARCHAR},
            </if>
            <if test="record.resourceName != null">
                RESOURCE_NAME = #{record.resourceName,jdbcType=VARCHAR},
            </if>
            <if test="record.resourceValue != null">
                RESOURCE_VALUE = #{record.resourceValue,jdbcType=VARCHAR},
            </if>
            <if test="record.resourceVisible != null">
                RESOURCE_VISIBLE = #{record.resourceVisible,jdbcType=DECIMAL},
            </if>
            <if test="record.resourceEnable != null">
                RESOURCE_ENABLE = #{record.resourceEnable,jdbcType=DECIMAL},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update RUICAI.SYSTEM_RESOURCE
        set ID = #{record.id,jdbcType=VARCHAR},
        PARENT_ID = #{record.parentId,jdbcType=VARCHAR},
        RESOURCE_TYPE = #{record.resourceType,jdbcType=VARCHAR},
        RESOURCE_NAME = #{record.resourceName,jdbcType=VARCHAR},
        RESOURCE_VALUE = #{record.resourceValue,jdbcType=VARCHAR},
        RESOURCE_VISIBLE = #{record.resourceVisible,jdbcType=DECIMAL},
        RESOURCE_ENABLE = #{record.resourceEnable,jdbcType=DECIMAL}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.ruicai.system.po.system.SystemResource">
        update RUICAI.SYSTEM_RESOURCE
        <set>
            <if test="parentId != null">
                PARENT_ID = #{parentId,jdbcType=VARCHAR},
            </if>
            <if test="resourceType != null">
                RESOURCE_TYPE = #{resourceType,jdbcType=VARCHAR},
            </if>
            <if test="resourceName != null">
                RESOURCE_NAME = #{resourceName,jdbcType=VARCHAR},
            </if>
            <if test="resourceValue != null">
                RESOURCE_VALUE = #{resourceValue,jdbcType=VARCHAR},
            </if>
            <if test="resourceDescribe != null">
                RESOURCE_DESCRIBE = #{resourceDescribe,jdbcType=DECIMAL},
            </if>
            <if test="resourceVisible != null">
                RESOURCE_VISIBLE = #{resourceVisible,jdbcType=DECIMAL},
            </if>
            <if test="resourceEnable != null">
                RESOURCE_ENABLE = #{resourceEnable,jdbcType=DECIMAL},
            </if>
        </set>
        where ID = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ruicai.system.po.system.SystemResource">
        UPDATE RUICAI.SYSTEM_RESOURCE
        SET PARENT_ID        = #{parentId,jdbcType=VARCHAR},
            RESOURCE_TYPE    = #{resourceType,jdbcType=VARCHAR},
            RESOURCE_NAME    = #{resourceName,jdbcType=VARCHAR},
            RESOURCE_VALUE   = #{resourceValue,jdbcType=VARCHAR},
            RESOURCE_VISIBLE = #{resourceVisible,jdbcType=DECIMAL},
            RESOURCE_ENABLE  = #{resourceEnable,jdbcType=DECIMAL}
        WHERE ID = #{id,jdbcType=VARCHAR}
    </update>

    <select id="selectPreByCondition" parameterType="com.ruicai.system.po.system.ResourceCondition" resultMap="BaseResultMap">
        SELECT
        *
        FROM
        (
        SELECT
        A .*, ROWNUM rn
        FROM
        (
        SELECT
        SR.*,
        SD.DICTIONARY_NAME AS RESOURCE_TYPE_VIEW
        FROM
        SYSTEM_RESOURCE sr
        JOIN SYSTEM_DICTIONARY sd ON SR.RESOURCE_TYPE = SD."ID"
        WHERE ROWNUM &lt; #{endNum}

        <if test="resourceName != null and resourceName != ''">
            AND  RESOURCE_NAME LIKE  '%${resourceName}%'
        </if>

        <if test="resourceValue != null and resourceValue != ''">
            AND RESOURCE_VALUE LIKE  '%${resourceValue}%'
        </if>


        ) A
        )
        WHERE rn  &gt; #{startNum}
    </select>

    <select id="selectPreByConditionCount" parameterType="com.ruicai.system.po.system.ResourceCondition" resultType="int">
        SELECT
            "COUNT" ("ID")
        FROM
            SYSTEM_RESOURCE sr
        <where>
            <if test="resourceName != null and resourceName != ''">
               RESOURCE_NAME LIKE  '%${resourceName}%'
            </if>

            <if test="resourceValue != null and resourceValue != ''">
                AND RESOURCE_VALUE LIKE  '%${resourceValue}%'
            </if>
        </where>


    </select>




</mapper>