<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ruicai.examination.mapper.examination.ExaminationArrangementMapper">
    <resultMap id="BaseResultMap" type="com.ruicai.examination.po.examination.ExaminationArrangement">
        <id column="ID" property="id" jdbcType="VARCHAR"/>
        <result column="CLASS_ID" property="classId" jdbcType="VARCHAR"/>
        <result column="TEACHER_ID" property="teacherId" jdbcType="VARCHAR"/>
        <result column="PAPER_ID" property="paperId" jdbcType="VARCHAR"/>
        <result column="EXAMINATION_STAGE" property="examinationStage" jdbcType="VARCHAR"/>
        <result column="EXAMINATION_TIME" property="examinationTime" jdbcType="OTHER"/>
        <result column="EXAMINATION_ADDRESS" property="examinationAddress" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="TeacherResultMap" type="com.ruicai.examination.po.education.EducationTeacher">
        <id column="ID1" property="id" jdbcType="VARCHAR"/>
        <result column="USER_ID" property="userId" jdbcType="VARCHAR"/>
        <result column="TEACHER_TYPE" property="teacherType" jdbcType="VARCHAR"/>
        <result column="TEACHER_SPECIALITY" property="teacherSpeciality" jdbcType="VARCHAR"/>
        <result column="TEACHER_SEX" property="teacherSex" jdbcType="VARCHAR"/>
        <result column="TEACHER_NAME" property="teacherName" jdbcType="VARCHAR"/>
        <result column="TEACHER_PHONE" property="teacherPhone" jdbcType="VARCHAR"/>
        <result column="TEACHER_INTRODUCTION" property="teacherIntroduction" jdbcType="VARCHAR"/>
        <result column="TEACHER_PICTURE" property="teacherPicture" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="ClassResultMap" type="com.ruicai.examination.po.education.EducationClass">
        <id column="ID2" property="id" jdbcType="VARCHAR"/>
        <result column="HEAD_TEACHER_ID" property="headTeacherId" jdbcType="VARCHAR"/>
        <result column="MAIN_TEACHER_ID" property="mainTeacherId" jdbcType="VARCHAR"/>
        <result column="ASSISTANT_ID" property="assistantId" jdbcType="VARCHAR"/>
        <result column="CLASS_TYPE" property="classType" jdbcType="VARCHAR"/>
        <result column="CLASS_NAME" property="className" jdbcType="VARCHAR"/>
        <result column="CLASS_START_DATE" property="classStartDate" jdbcType="TIMESTAMP"/>
        <result column="CLASS_END_DATE" property="classEndDate" jdbcType="TIMESTAMP"/>
    </resultMap>
    <resultMap id="ManagementResultList" type="com.ruicai.examination.vo.examination.Management">
        <id column="ID" property="id" jdbcType="VARCHAR"/>
        <result column="CLASS_NAME" property="className" jdbcType="VARCHAR"/>
        <result column="TEACHER_NAME" property="invigilator" jdbcType="VARCHAR"/>
        <result column="EXAMINATION_ADDRESS" property="testPlace" jdbcType="VARCHAR"/>
        <result column="EXAMINATION_TIME" property="testTime" jdbcType="VARCHAR"/>
        <result column="DICTIONARY_NAME" property="testPhase" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        ID, CLASS_ID, TEACHER_ID, PAPER_ID, EXAMINATION_STAGE, EXAMINATION_TIME, EXAMINATION_ADDRESS
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.ruicai.examination.po.examination.ExaminationArrangementExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from RUICAI.EXAMINATION_ARRANGEMENT
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from RUICAI.EXAMINATION_ARRANGEMENT
        where ID = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        DELETE FROM RUICAI.EXAMINATION_ARRANGEMENT
        WHERE ID = #{id,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="com.ruicai.examination.po.examination.ExaminationArrangementExample">
        delete from RUICAI.EXAMINATION_ARRANGEMENT
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.ruicai.examination.po.examination.ExaminationArrangement">
        INSERT INTO RUICAI.EXAMINATION_ARRANGEMENT (ID, CLASS_ID, TEACHER_ID,
                                                    PAPER_ID, EXAMINATION_STAGE, EXAMINATION_TIME,
                                                    EXAMINATION_ADDRESS)
        VALUES (#{id,jdbcType=VARCHAR}, #{classId,jdbcType=VARCHAR}, #{teacherId,jdbcType=VARCHAR},
                #{paperId,jdbcType=VARCHAR}, #{examinationStage,jdbcType=VARCHAR}, #{examinationTime,jdbcType=OTHER},
                #{examinationAddress,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.ruicai.examination.po.examination.ExaminationArrangement">
        insert into RUICAI.EXAMINATION_ARRANGEMENT
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            <if test="classId != null">
                CLASS_ID,
            </if>
            <if test="teacherId != null">
                TEACHER_ID,
            </if>
            <if test="paperId != null">
                PAPER_ID,
            </if>
            <if test="examinationStage != null">
                EXAMINATION_STAGE,
            </if>
            <if test="examinationTime != null">
                EXAMINATION_TIME,
            </if>
            <if test="examinationAddress != null">
                EXAMINATION_ADDRESS,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="classId != null">
                #{classId,jdbcType=VARCHAR},
            </if>
            <if test="teacherId != null">
                #{teacherId,jdbcType=VARCHAR},
            </if>
            <if test="paperId != null">
                #{paperId,jdbcType=VARCHAR},
            </if>
            <if test="examinationStage != null">
                #{examinationStage,jdbcType=VARCHAR},
            </if>
            <if test="examinationTime != null">
                #{examinationTime,jdbcType=OTHER},
            </if>
            <if test="examinationAddress != null">
                #{examinationAddress,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.ruicai.examination.po.examination.ExaminationArrangementExample"
            resultType="java.lang.Integer">
        select count(*) from RUICAI.EXAMINATION_ARRANGEMENT
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update RUICAI.EXAMINATION_ARRANGEMENT
        <set>
            <if test="record.id != null">
                ID = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.classId != null">
                CLASS_ID = #{record.classId,jdbcType=VARCHAR},
            </if>
            <if test="record.teacherId != null">
                TEACHER_ID = #{record.teacherId,jdbcType=VARCHAR},
            </if>
            <if test="record.paperId != null">
                PAPER_ID = #{record.paperId,jdbcType=VARCHAR},
            </if>
            <if test="record.examinationStage != null">
                EXAMINATION_STAGE = #{record.examinationStage,jdbcType=VARCHAR},
            </if>
            <if test="record.examinationTime != null">
                EXAMINATION_TIME = #{record.examinationTime,jdbcType=OTHER},
            </if>
            <if test="record.examinationAddress != null">
                EXAMINATION_ADDRESS = #{record.examinationAddress,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update RUICAI.EXAMINATION_ARRANGEMENT
        set ID = #{record.id,jdbcType=VARCHAR},
        CLASS_ID = #{record.classId,jdbcType=VARCHAR},
        TEACHER_ID = #{record.teacherId,jdbcType=VARCHAR},
        PAPER_ID = #{record.paperId,jdbcType=VARCHAR},
        EXAMINATION_STAGE = #{record.examinationStage,jdbcType=VARCHAR},
        EXAMINATION_TIME = #{record.examinationTime,jdbcType=OTHER},
        EXAMINATION_ADDRESS = #{record.examinationAddress,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.ruicai.examination.po.examination.ExaminationArrangement">
        update RUICAI.EXAMINATION_ARRANGEMENT
        <set>
            <if test="classId != null">
                CLASS_ID = #{classId,jdbcType=VARCHAR},
            </if>
            <if test="teacherId != null">
                TEACHER_ID = #{teacherId,jdbcType=VARCHAR},
            </if>
            <if test="paperId != null">
                PAPER_ID = #{paperId,jdbcType=VARCHAR},
            </if>
            <if test="examinationStage != null">
                EXAMINATION_STAGE = #{examinationStage,jdbcType=VARCHAR},
            </if>
            <if test="examinationTime != null">
                EXAMINATION_TIME = #{examinationTime,jdbcType=OTHER},
            </if>
            <if test="examinationAddress != null">
                EXAMINATION_ADDRESS = #{examinationAddress,jdbcType=VARCHAR},
            </if>
        </set>
        where ID = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ruicai.examination.po.examination.ExaminationArrangement">
        UPDATE RUICAI.EXAMINATION_ARRANGEMENT
        SET CLASS_ID            = #{classId,jdbcType=VARCHAR},
            TEACHER_ID          = #{teacherId,jdbcType=VARCHAR},
            PAPER_ID            = #{paperId,jdbcType=VARCHAR},
            EXAMINATION_STAGE   = #{examinationStage,jdbcType=VARCHAR},
            EXAMINATION_TIME    = #{examinationTime,jdbcType=OTHER},
            EXAMINATION_ADDRESS = #{examinationAddress,jdbcType=VARCHAR}
        WHERE ID = #{id,jdbcType=VARCHAR}
    </update>
    <select id="findAllManagement" parameterType="com.ruicai.examination.vo.examination.ManagementDatagrid"
            resultMap="BaseResultMap">
        SELECT *
        FROM (
                 (SELECT
                      rownum rn,
                      uo.*
                  FROM
                      (SELECT *
                       FROM EXAMINATION_ARRANGEMENT ea
                       ORDER BY ea.EXAMINATION_TIME) uo
                  WHERE rownum &lt;= #{rows} + 2)) ua
        WHERE ua.rn &gt;= #{rows}
    </select>

    <select id="findManagementDatagrid" resultMap="ManagementResultList"
            parameterType="com.ruicai.examination.vo.examination.Management">
        SELECT *
        FROM (
                 (SELECT
                      rownum rn,
                      uo.*
                  FROM
                      (SELECT
                           ea.ID,
                           ec.CLASS_NAME,
                           et.TEACHER_NAME,
                           ea.EXAMINATION_ADDRESS,
                           ea.EXAMINATION_TIME,
                           sd.DICTIONARY_NAME
                       FROM EXAMINATION_ARRANGEMENT ea INNER JOIN EDUCATION_TEACHER et ON ea.TEACHER_ID = et.ID
                           INNER JOIN EDUCATION_CLASS ec ON ea.CLASS_ID = ec.ID
                           INNER JOIN SYSTEM_DICTIONARY sd ON ea.EXAMINATION_STAGE = sd.ID) uo
                  WHERE rownum &lt;= #{rows} + 2)) ua
        WHERE ua.rn &gt;= #{rows}
    </select>

    <select id="findDicTypeName" parameterType="String" resultType="String">
        SELECT * FROM SYSTEM_DICTIONARY sd WHERE sd.DICTIONARY_TYPE_ID =
          (SELECT ID FROM SYSTEM_DICTIONARY_TYPE sdt WHERE sdt.DICTIONARY_TYPE_NAME = #{dicTypeName})
          ORDER BY SD.DICTIONARY_SORT_NUMBER
    </select>
</mapper>